{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mini-Project\\\\travel-planner\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\"; // ✅ Add styles for the chatbot\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [chatData, setChatData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/data/Chatbot.json\").then(res => res.json()).then(data => setChatData(data)).catch(err => console.error(\"Error loading chatbot JSON:\", err));\n  }, []);\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    let botResponse = \"I don't understand.\";\n    if (chatData) {\n      chatData.intents.forEach(intent => {\n        intent.patterns.forEach(pattern => {\n          if (input.toLowerCase().includes(pattern.toLowerCase())) {\n            botResponse = intent.responses[Math.floor(Math.random() * intent.responses.length)];\n          }\n        });\n      });\n    }\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: botResponse\n      }]);\n    }, 500);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommender Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"cnoo/waVcaLkgeQo9m8q3UXt0WA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","chatData","setChatData","messages","setMessages","input","setInput","fetch","then","res","json","data","catch","err","console","error","handleSendMessage","trim","userMessage","sender","text","prev","botResponse","intents","forEach","intent","patterns","pattern","toLowerCase","includes","responses","Math","floor","random","length","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Mini-Project/travel-planner/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Chatbot.css\"; // ✅ Add styles for the chatbot\r\n\r\nconst Chatbot = () => {\r\n  const [chatData, setChatData] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/data/Chatbot.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => setChatData(data))\r\n      .catch((err) => console.error(\"Error loading chatbot JSON:\", err));\r\n  }, []);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    let botResponse = \"I don't understand.\";\r\n    if (chatData) {\r\n      chatData.intents.forEach((intent) => {\r\n        intent.patterns.forEach((pattern) => {\r\n          if (input.toLowerCase().includes(pattern.toLowerCase())) {\r\n            botResponse = intent.responses[Math.floor(Math.random() * intent.responses.length)];\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: botResponse }]);\r\n    }, 500);\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Recommender Chatbot</h2>\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Ask something...\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}