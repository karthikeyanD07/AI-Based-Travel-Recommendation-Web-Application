{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mini-Project\\\\travel-planner\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    try {\n      const response = await axios.post(\"http://localhost:5000/chat\", {\n        message: input\n      });\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: response.data.response\n      }]);\n    } catch (error) {\n      console.error(\"Chatbot error:\", error);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"fixed\",\n      bottom: \"20px\",\n      right: \"20px\",\n      width: \"300px\",\n      background: \"#fff\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"8px\",\n      padding: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"250px\",\n        overflowY: \"auto\",\n        marginBottom: \"10px\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\n          margin: \"5px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.sender === \"user\" ? \"You: \" : \"Bot: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message...\",\n      style: {\n        width: \"75%\",\n        padding: \"5px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        width: \"20%\",\n        marginLeft: \"5%\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","sendMessage","trim","newMessages","sender","text","response","post","message","data","error","console","style","position","bottom","right","width","background","border","borderRadius","padding","children","height","overflowY","marginBottom","map","msg","index","textAlign","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","marginLeft","_c","$RefreshReg$"],"sources":["D:/Mini-Project/travel-planner/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n        \r\n        const newMessages = [...messages, { sender: \"user\", text: input }];\r\n        setMessages(newMessages);\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/chat\", { message: input });\r\n            setMessages([...newMessages, { sender: \"bot\", text: response.data.response }]);\r\n        } catch (error) {\r\n            console.error(\"Chatbot error:\", error);\r\n        }\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div style={{ position: \"fixed\", bottom: \"20px\", right: \"20px\", width: \"300px\", background: \"#fff\", border: \"1px solid #ccc\", borderRadius: \"8px\", padding: \"10px\" }}>\r\n            <div style={{ height: \"250px\", overflowY: \"auto\", marginBottom: \"10px\" }}>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\", margin: \"5px 0\" }}>\r\n                        <strong>{msg.sender === \"user\" ? \"You: \" : \"Bot: \"}</strong>\r\n                        {msg.text}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input \r\n                type=\"text\" \r\n                value={input} \r\n                onChange={(e) => setInput(e.target.value)} \r\n                placeholder=\"Type a message...\" \r\n                style={{ width: \"75%\", padding: \"5px\" }} \r\n            />\r\n            <button onClick={sendMessage} style={{ width: \"20%\", marginLeft: \"5%\" }}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}