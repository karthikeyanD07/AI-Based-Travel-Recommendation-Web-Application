{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\travel-planner\\\\src\\\\components\\\\Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Recommendations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState('');\n  const handleFetchRecommendations = async () => {\n    if (!city) {\n      setError('Please enter a city name.');\n      return;\n    }\n    setError('');\n    setRecommendations([]); // Clear previous results\n\n    try {\n      // Simulating API call with dummy data\n      const dummyData = {\n        \"Delhi\": [{\n          name: \"India Gate\",\n          description: \"Historic monument and war memorial.\"\n        }, {\n          name: \"Red Fort\",\n          description: \"A UNESCO World Heritage Site.\"\n        }, {\n          name: \"Qutub Minar\",\n          description: \"A towering example of Indo-Islamic architecture.\"\n        }],\n        \"Mumbai\": [{\n          name: \"Gateway of India\",\n          description: \"Iconic landmark overlooking the Arabian Sea.\"\n        }, {\n          name: \"Marine Drive\",\n          description: \"Scenic boulevard along the coastline.\"\n        }, {\n          name: \"Elephanta Caves\",\n          description: \"Ancient rock-cut caves on an island.\"\n        }]\n      };\n      const cityRecommendations = dummyData[city];\n      if (cityRecommendations) {\n        setRecommendations(cityRecommendations);\n      } else {\n        throw new Error('No recommendations found for the entered city.');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Explore the Best Places to Visit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a city name\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleFetchRecommendations() // Allow Enter key to submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchRecommendations,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: recommendations.map((place, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendation-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: place.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"oSyZia5yZwus63T6Vl4eD7p36Qs=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Recommendations","_s","city","setCity","recommendations","setRecommendations","error","setError","handleFetchRecommendations","dummyData","name","description","cityRecommendations","Error","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","map","place","index","_c","$RefreshReg$"],"sources":["C:/Users/USER/travel-planner/src/components/Recommendations.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Recommendations.css';\r\n\r\nconst Recommendations = () => {\r\n  const [city, setCity] = useState('');\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleFetchRecommendations = async () => {\r\n    if (!city) {\r\n      setError('Please enter a city name.');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setRecommendations([]); // Clear previous results\r\n\r\n    try {\r\n      // Simulating API call with dummy data\r\n      const dummyData = {\r\n        \"Delhi\": [\r\n          { name: \"India Gate\", description: \"Historic monument and war memorial.\" },\r\n          { name: \"Red Fort\", description: \"A UNESCO World Heritage Site.\" },\r\n          { name: \"Qutub Minar\", description: \"A towering example of Indo-Islamic architecture.\" }\r\n        ],\r\n        \"Mumbai\": [\r\n          { name: \"Gateway of India\", description: \"Iconic landmark overlooking the Arabian Sea.\" },\r\n          { name: \"Marine Drive\", description: \"Scenic boulevard along the coastline.\" },\r\n          { name: \"Elephanta Caves\", description: \"Ancient rock-cut caves on an island.\" }\r\n        ]\r\n      };\r\n\r\n      const cityRecommendations = dummyData[city];\r\n      if (cityRecommendations) {\r\n        setRecommendations(cityRecommendations);\r\n      } else {\r\n        throw new Error('No recommendations found for the entered city.');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recommendations-container\">\r\n      <h1>Explore the Best Places to Visit</h1>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter a city name\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleFetchRecommendations()} // Allow Enter key to submit\r\n        />\r\n        <button onClick={handleFetchRecommendations}>Search</button>\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"results\">\r\n        {recommendations.map((place, index) => (\r\n          <div key={index} className=\"recommendation-card\">\r\n            <h3>{place.name}</h3>\r\n            <p>{place.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}