{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mini-Project\\\\travel-planner\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add user message to chat\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    try {\n      const response = await axios.post(\"http://localhost:5000/chat\", {\n        message: input\n      });\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: response.data.response\n      }]);\n    } catch (error) {\n      console.error(\"Error communicating with chatbot:\", error);\n    }\n    setInput(\"\"); // Clear input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"300px\",\n      border: \"1px solid #ccc\",\n      padding: \"10px\",\n      borderRadius: \"8px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\",\n        overflowY: \"auto\",\n        marginBottom: \"10px\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\n          margin: \"5px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.sender === \"user\" ? \"You: \" : \"Bot: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message...\",\n      style: {\n        width: \"80%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        width: \"18%\",\n        marginLeft: \"2%\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","sendMessage","trim","newMessages","sender","text","response","post","message","data","error","console","style","width","border","padding","borderRadius","children","height","overflowY","marginBottom","map","msg","index","textAlign","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","marginLeft","_c","$RefreshReg$"],"sources":["D:/Mini-Project/travel-planner/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n        \r\n        // Add user message to chat\r\n        const newMessages = [...messages, { sender: \"user\", text: input }];\r\n        setMessages(newMessages);\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/chat\", { message: input });\r\n            setMessages([...newMessages, { sender: \"bot\", text: response.data.response }]);\r\n        } catch (error) {\r\n            console.error(\"Error communicating with chatbot:\", error);\r\n        }\r\n\r\n        setInput(\"\"); // Clear input field\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: \"300px\", border: \"1px solid #ccc\", padding: \"10px\", borderRadius: \"8px\" }}>\r\n            <div style={{ height: \"300px\", overflowY: \"auto\", marginBottom: \"10px\" }}>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\", margin: \"5px 0\" }}>\r\n                        <strong>{msg.sender === \"user\" ? \"You: \" : \"Bot: \"}</strong>\r\n                        {msg.text}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input \r\n                type=\"text\" \r\n                value={input} \r\n                onChange={(e) => setInput(e.target.value)} \r\n                placeholder=\"Type a message...\" \r\n                style={{ width: \"80%\" }} \r\n            />\r\n            <button onClick={sendMessage} style={{ width: \"18%\", marginLeft: \"2%\" }}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}